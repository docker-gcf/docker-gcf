#!/usr/bin/env bash
#   Use this script to test if a given TCP host/port are available

cmdname="$(basename "${0}")"

QUIET=0
ISBUSY=0

echoerr()
{
    if [[ "${QUIET}" -ne 1 ]]
    then
        echo "${@}" 1>&2
    fi
}

usage()
{
    cat << USAGE >&2
Usage:
    ${cmdname} host:port [-s] [-t timeout] [-- command args]
    -h HOST | --host=HOST       Host or IP under test
    -p PORT | --port=PORT       TCP port under test
                                Alternatively, you specify the host and port as host:port
USAGE
    exit 1
}

# process arguments
while [[ "${#}" -gt 0 ]]
do
    case "${1}" in
        *:* )
            hostport=(${1//:/ })
            HOST="${hostport[0]}"
            PORT="${hostport[1]}"
            shift 1
        ;;
        -h)
            HOST="${2}"
            if [[ "${HOST}" == "" ]]; then break; fi
            shift 2
        ;;
        --host=*)
            HOST="${1#*=}"
            shift 1
        ;;
        -p)
            PORT="${2}"
            if [[ "${PORT}" == "" ]]; then break; fi
            shift 2
        ;;
        --port=*)
            PORT="${1#*=}"
            shift 1
        ;;
        --help)
            usage
        ;;
        *)
            echoerr "Unknown argument: ${1}"
            usage
        ;;
    esac
done

if [[ "${HOST}" == "" || "${PORT}" == "" ]]; then
    echoerr "Error: you need to provide a host and port to test."
    usage
fi

if [[ "${ISBUSY}" -eq 1 ]]; then
    nc -z "${HOST}" "${PORT}" 2>&1 >/dev/null
    result="${?}"
else
    (echo > /dev/tcp/"${HOST}"/"${PORT}") >/dev/null 2>&1
    result="${?}"
fi

exit "${result}"
